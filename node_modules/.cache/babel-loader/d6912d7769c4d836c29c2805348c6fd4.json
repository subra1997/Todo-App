{"ast":null,"code":"var _jsxFileName = \"/Users/asubramanian/todo-app/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    doneTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isDone ? 'todo-row done' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => doneTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this));\n}\n\n_s(Todo, \"nM3sUQW3/gzwNqKklfwVlhnRntc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","doneTodo","removeTodo","updateTodo","edit","setEdit","id","value","map","todo","index","isDone","text"],"sources":["/Users/asubramanian/todo-app/src/Components/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\nfunction Todo({todos, doneTodo, removeTodo, updateTodo}) {\n\n    const [edit, setEdit] = useState({\n        id:null,\n        value: ''\n    })\n\n\n  return todos.map((todo, index) => (\n      <div className={todo.isDone ? 'todo-row done' : 'todo-row'} key={index}>\n\n      <div key={todo.id} onClick= {() => doneTodo(todo.id)}>\n          {todo.text}\n      </div>\n      <div className=\"icons\">\n          <RiCloseCircleLine\n          onClick={( ) => removeTodo(todo.id)}\n          className = 'delete-icon'/>\n          <TiEdit \n          onClick={( ) => setEdit({id:todo.id, value:todo.text})}\n            className = 'edit-icon'/>\n\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAEA,SAASC,IAAT,OAAyD;EAAA;;EAAA,IAA3C;IAACC,KAAD;IAAQC,QAAR;IAAkBC,UAAlB;IAA8BC;EAA9B,CAA2C;EAErD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;IAC7BW,EAAE,EAAC,IAD0B;IAE7BC,KAAK,EAAE;EAFsB,CAAD,CAAhC;EAMF,OAAOP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;IAAK,SAAS,EAAED,IAAI,CAACE,MAAL,GAAc,eAAd,GAAgC,UAAhD;IAAA,wBAEA;MAAmB,OAAO,EAAG,MAAMV,QAAQ,CAACQ,IAAI,CAACH,EAAN,CAA3C;MAAA,UACKG,IAAI,CAACG;IADV,GAAUH,IAAI,CAACH,EAAf;MAAA;MAAA;MAAA;IAAA,QAFA,eAKA;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI,QAAC,iBAAD;QACA,OAAO,EAAE,MAAOJ,UAAU,CAACO,IAAI,CAACH,EAAN,CAD1B;QAEA,SAAS,EAAG;MAFZ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,MAAD;QACA,OAAO,EAAE,MAAOD,OAAO,CAAC;UAACC,EAAE,EAACG,IAAI,CAACH,EAAT;UAAaC,KAAK,EAACE,IAAI,CAACG;QAAxB,CAAD,CADvB;QAEE,SAAS,EAAG;MAFd;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALA;EAAA,GAAiEF,KAAjE;IAAA;IAAA;IAAA;EAAA,QADG,CAAP;AAiBD;;GAzBQX,I;;KAAAA,I;AA2BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}