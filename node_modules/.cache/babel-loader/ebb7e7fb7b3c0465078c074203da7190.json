{"ast":null,"code":"var _jsxFileName = \"/Users/asubramanian/Desktop/todo-app/src/Components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const focus = useRef(null);\n  useEffect(() => {\n    focus.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your Todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: focus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"+yFWZ31oTTYGvhAta4jLtH0vl/Y=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","focus","current","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["/Users/asubramanian/Desktop/todo-app/src/Components/TodoForm.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\n\nfunction TodoForm(props) {\nconst [input, setInput] = useState(props.edit ? props.edit.value : '');\n\nconst focus = useRef(null);\n\nuseEffect(()=> {\n    focus.current.focus()\n});\n\nconst handleChange = e =>{\n    setInput(e.target.value);\n};\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n        id:Math.floor(Math.random() * 10000),\n        text:input\n    });\n\n    setInput('');\n};\n\n  return (\n    <form className = \"todo-form\" onSubmit={handleSubmit}>\n        {props.edit ? (\n            <>\n        <input type = \"text\" \n        placeholder=\"Update your Todo\" \n        value = {input} \n        name =\"text\" \n        className='todo-input edit'\n        onChange={handleChange}\n        ref={focus}\n        />\n        <button className='todo-button edit'>Update</button>\n        </>\n        ) : \n        \n        (\n            <>\n        <input type = \"text\" \n        placeholder=\"Add a todo\" \n        value = {input} \n        name =\"text\" \n        className='todo-input'\n        onChange={handleChange}\n        ref={focus}\n        />\n        <button className='todo-button'>Add Todo</button>\n        </>\n        )\n        }\n\n\n        \n    </form>\n  );\n}\n\nexport default TodoForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;EAEA,MAAMC,KAAK,GAAGP,MAAM,CAAC,IAAD,CAApB;EAEAD,SAAS,CAAC,MAAK;IACXQ,KAAK,CAACC,OAAN,CAAcD,KAAd;EACH,CAFQ,CAAT;;EAIA,MAAME,YAAY,GAAGC,CAAC,IAAG;IACrBN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASL,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMM,YAAY,GAAGF,CAAC,IAAI;IACtBA,CAAC,CAACG,cAAF;IAEAX,KAAK,CAACY,QAAN,CAAe;MACXC,EAAE,EAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADQ;MAEXC,IAAI,EAAChB;IAFM,CAAf;IAKAC,QAAQ,CAAC,EAAD,CAAR;EACH,CATD;;EAWE,oBACE;IAAM,SAAS,EAAG,WAAlB;IAA8B,QAAQ,EAAEQ,YAAxC;IAAA,UACKV,KAAK,CAACG,IAAN,gBACG;MAAA,wBACJ;QAAO,IAAI,EAAG,MAAd;QACA,WAAW,EAAC,kBADZ;QAEA,KAAK,EAAIF,KAFT;QAGA,IAAI,EAAE,MAHN;QAIA,SAAS,EAAC,iBAJV;QAKA,QAAQ,EAAEM,YALV;QAMA,GAAG,EAAEF;MANL;QAAA;QAAA;QAAA;MAAA,QADI,eASJ;QAAQ,SAAS,EAAC,kBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATI;IAAA,gBADH,gBAeG;MAAA,wBACJ;QAAO,IAAI,EAAG,MAAd;QACA,WAAW,EAAC,YADZ;QAEA,KAAK,EAAIJ,KAFT;QAGA,IAAI,EAAE,MAHN;QAIA,SAAS,EAAC,YAJV;QAKA,QAAQ,EAAEM,YALV;QAMA,GAAG,EAAEF;MANL;QAAA;QAAA;QAAA;MAAA,QADI,eASJ;QAAQ,SAAS,EAAC,aAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATI;IAAA;EAhBR;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GA3DQN,Q;;KAAAA,Q;AA6DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}